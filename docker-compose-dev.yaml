services:
  mongo1:
    image: ${MONGO_IMG_NAME}
    container_name: mongo1
    ports:
      - "27017:27017"
    command: mongod --replSet mongo-replica-set --bind_ip_all
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo-cluster
      - backend-network

  mongo2:
    image: ${MONGO_IMG_NAME}
    container_name: mongo2
    ports:
      - "27018:27017"
    command: mongod --replSet mongo-replica-set --bind_ip_all
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo-cluster

  mongo3:
    image: ${MONGO_IMG_NAME}
    container_name: mongo3
    ports:
      - "27019:27017"
    command: mongod --replSet mongo-replica-set --bind_ip_all
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo-cluster

  mongo-init:
    image: ${MONGO_INIT_IMG_NAME}
    container_name: mongo-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - init_done:/init_done
    networks:
      - mongo-cluster
    secrets:
      - mongo_db_password

  yolo5:
    image: ${YOLO5_IMG_NAME}
    container_name: ${YOLO5_NAME}
    depends_on:
      - mongo-init
    ports:
      - ${YOLO5_PORT}:${YOLO5_PORT}
    environment:
      AWS_PROFILE:
      BUCKET_NAME:
      BUCKET_PREFIX:
    command: >
      /bin/bash -c "
        max_retries=10;
        retries=0;
        while [ ! -f /init_done/success ]; do
          echo 'Waiting for mongo-init to complete...';
          sleep 10;
          retries=$((retries+1));
          if [[ $$retries -ge $$max_retries ]]; then
            echo 'Failed to start YOLO5 application: mongo-init did not complete within the max retries.';
            exit 1;
          fi;
        done;
        echo 'Starting YOLO5 application...';
        python3 app.py
      "
    volumes:
      - init_done:/init_done
      - /Users/talo/.aws/credentials:/root/.aws/credentials
    networks:
      - backend-network
      - frontend-network
    secrets:
      - mongo_db_password

  polybot:
    image: ${POLYBOT_IMG_NAME}
    container_name: ${POLYBOT_NAME}
    depends_on:
      - yolo5
    ports:
      - ${POLYBOT_PORT}:${POLYBOT_PORT}
    environment:
      AWS_PROFILE:
      TELEGRAM_APP_URL:
      BUCKET_NAME:
      BUCKET_PREFIX:
      YOLO5_NAME:
      YOLO5_PORT:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8443/health"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 3
    volumes:
      - /Users/talo/.aws/credentials:/home/appuser/.aws/credentials
    networks:
      - frontend-network
    secrets:
      - telegram_bot_token

secrets:
   telegram_bot_token:
     file: telegram_bot_token.secret
   mongo_db_password:
     file: mongo_db_password.secret

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  init_done:

networks:
  mongo-cluster:
    name: mongo-cluster
  backend-network:
    name: backend-network
  frontend-network:
    name: frontend-network
